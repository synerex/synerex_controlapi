// Code generated by protoc-gen-go. DO NOT EDIT.
// source: nodeserv_controlapi.proto

package synerex_nodeserv_controlapi

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	synerex_nodeapi "github.com/synerex/synerex_nodeapi"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OrderType int32

const (
	OrderType_SWITCH_SERVER OrderType = 0
)

var OrderType_name = map[int32]string{
	0: "SWITCH_SERVER",
}

var OrderType_value = map[string]int32{
	"SWITCH_SERVER": 0,
}

func (x OrderType) String() string {
	return proto.EnumName(OrderType_name, int32(x))
}

func (OrderType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d5d931e58fe526e3, []int{0}
}

type NodeControlFilter struct {
	NodeType             synerex_nodeapi.NodeType `protobuf:"varint,1,opt,name=nodeType,proto3,enum=nodeapi.NodeType" json:"nodeType,omitempty"`
	ClusterId            int32                    `protobuf:"varint,2,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	AreaId               string                   `protobuf:"bytes,3,opt,name=area_id,json=areaId,proto3" json:"area_id,omitempty"`
	Version              string                   `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	Channel              uint32                   `protobuf:"varint,5,opt,name=channel,proto3" json:"channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *NodeControlFilter) Reset()         { *m = NodeControlFilter{} }
func (m *NodeControlFilter) String() string { return proto.CompactTextString(m) }
func (*NodeControlFilter) ProtoMessage()    {}
func (*NodeControlFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5d931e58fe526e3, []int{0}
}

func (m *NodeControlFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeControlFilter.Unmarshal(m, b)
}
func (m *NodeControlFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeControlFilter.Marshal(b, m, deterministic)
}
func (m *NodeControlFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeControlFilter.Merge(m, src)
}
func (m *NodeControlFilter) XXX_Size() int {
	return xxx_messageInfo_NodeControlFilter.Size(m)
}
func (m *NodeControlFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeControlFilter.DiscardUnknown(m)
}

var xxx_messageInfo_NodeControlFilter proto.InternalMessageInfo

func (m *NodeControlFilter) GetNodeType() synerex_nodeapi.NodeType {
	if m != nil {
		return m.NodeType
	}
	return synerex_nodeapi.NodeType_PROVIDER
}

func (m *NodeControlFilter) GetClusterId() int32 {
	if m != nil {
		return m.ClusterId
	}
	return 0
}

func (m *NodeControlFilter) GetAreaId() string {
	if m != nil {
		return m.AreaId
	}
	return ""
}

func (m *NodeControlFilter) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *NodeControlFilter) GetChannel() uint32 {
	if m != nil {
		return m.Channel
	}
	return 0
}

type NodeControlInfo struct {
	NodeInfo             *synerex_nodeapi.NodeInfo `protobuf:"bytes,1,opt,name=nodeInfo,proto3" json:"nodeInfo,omitempty"`
	NodeId               int32                     `protobuf:"varint,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	ServerId             int32                     `protobuf:"varint,3,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *NodeControlInfo) Reset()         { *m = NodeControlInfo{} }
func (m *NodeControlInfo) String() string { return proto.CompactTextString(m) }
func (*NodeControlInfo) ProtoMessage()    {}
func (*NodeControlInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5d931e58fe526e3, []int{1}
}

func (m *NodeControlInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeControlInfo.Unmarshal(m, b)
}
func (m *NodeControlInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeControlInfo.Marshal(b, m, deterministic)
}
func (m *NodeControlInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeControlInfo.Merge(m, src)
}
func (m *NodeControlInfo) XXX_Size() int {
	return xxx_messageInfo_NodeControlInfo.Size(m)
}
func (m *NodeControlInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeControlInfo.DiscardUnknown(m)
}

var xxx_messageInfo_NodeControlInfo proto.InternalMessageInfo

func (m *NodeControlInfo) GetNodeInfo() *synerex_nodeapi.NodeInfo {
	if m != nil {
		return m.NodeInfo
	}
	return nil
}

func (m *NodeControlInfo) GetNodeId() int32 {
	if m != nil {
		return m.NodeId
	}
	return 0
}

func (m *NodeControlInfo) GetServerId() int32 {
	if m != nil {
		return m.ServerId
	}
	return 0
}

type NodeControlInfos struct {
	Infos                []*NodeControlInfo `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *NodeControlInfos) Reset()         { *m = NodeControlInfos{} }
func (m *NodeControlInfos) String() string { return proto.CompactTextString(m) }
func (*NodeControlInfos) ProtoMessage()    {}
func (*NodeControlInfos) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5d931e58fe526e3, []int{2}
}

func (m *NodeControlInfos) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeControlInfos.Unmarshal(m, b)
}
func (m *NodeControlInfos) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeControlInfos.Marshal(b, m, deterministic)
}
func (m *NodeControlInfos) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeControlInfos.Merge(m, src)
}
func (m *NodeControlInfos) XXX_Size() int {
	return xxx_messageInfo_NodeControlInfos.Size(m)
}
func (m *NodeControlInfos) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeControlInfos.DiscardUnknown(m)
}

var xxx_messageInfo_NodeControlInfos proto.InternalMessageInfo

func (m *NodeControlInfos) GetInfos() []*NodeControlInfo {
	if m != nil {
		return m.Infos
	}
	return nil
}

type Order struct {
	TargetNode *NodeControlInfo `protobuf:"bytes,1,opt,name=targetNode,proto3" json:"targetNode,omitempty"`
	OrderType  OrderType        `protobuf:"varint,2,opt,name=orderType,proto3,enum=nodeservcontrolapi.OrderType" json:"orderType,omitempty"`
	// Types that are valid to be assigned to OrderInfo:
	//	*Order_SwitchInfo
	OrderInfo            isOrder_OrderInfo `protobuf_oneof:"orderInfo"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5d931e58fe526e3, []int{3}
}

func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (m *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(m, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetTargetNode() *NodeControlInfo {
	if m != nil {
		return m.TargetNode
	}
	return nil
}

func (m *Order) GetOrderType() OrderType {
	if m != nil {
		return m.OrderType
	}
	return OrderType_SWITCH_SERVER
}

type isOrder_OrderInfo interface {
	isOrder_OrderInfo()
}

type Order_SwitchInfo struct {
	SwitchInfo *SwitchInfo `protobuf:"bytes,3,opt,name=switchInfo,proto3,oneof"`
}

func (*Order_SwitchInfo) isOrder_OrderInfo() {}

func (m *Order) GetOrderInfo() isOrder_OrderInfo {
	if m != nil {
		return m.OrderInfo
	}
	return nil
}

func (m *Order) GetSwitchInfo() *SwitchInfo {
	if x, ok := m.GetOrderInfo().(*Order_SwitchInfo); ok {
		return x.SwitchInfo
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Order) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Order_SwitchInfo)(nil),
	}
}

type SwitchInfo struct {
	SxServer             *NodeControlInfo `protobuf:"bytes,1,opt,name=sxServer,proto3" json:"sxServer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SwitchInfo) Reset()         { *m = SwitchInfo{} }
func (m *SwitchInfo) String() string { return proto.CompactTextString(m) }
func (*SwitchInfo) ProtoMessage()    {}
func (*SwitchInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5d931e58fe526e3, []int{4}
}

func (m *SwitchInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SwitchInfo.Unmarshal(m, b)
}
func (m *SwitchInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SwitchInfo.Marshal(b, m, deterministic)
}
func (m *SwitchInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SwitchInfo.Merge(m, src)
}
func (m *SwitchInfo) XXX_Size() int {
	return xxx_messageInfo_SwitchInfo.Size(m)
}
func (m *SwitchInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SwitchInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SwitchInfo proto.InternalMessageInfo

func (m *SwitchInfo) GetSxServer() *NodeControlInfo {
	if m != nil {
		return m.SxServer
	}
	return nil
}

type NodeControlResponse struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeControlResponse) Reset()         { *m = NodeControlResponse{} }
func (m *NodeControlResponse) String() string { return proto.CompactTextString(m) }
func (*NodeControlResponse) ProtoMessage()    {}
func (*NodeControlResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5d931e58fe526e3, []int{5}
}

func (m *NodeControlResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeControlResponse.Unmarshal(m, b)
}
func (m *NodeControlResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeControlResponse.Marshal(b, m, deterministic)
}
func (m *NodeControlResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeControlResponse.Merge(m, src)
}
func (m *NodeControlResponse) XXX_Size() int {
	return xxx_messageInfo_NodeControlResponse.Size(m)
}
func (m *NodeControlResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeControlResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NodeControlResponse proto.InternalMessageInfo

func (m *NodeControlResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func init() {
	proto.RegisterEnum("nodeservcontrolapi.OrderType", OrderType_name, OrderType_value)
	proto.RegisterType((*NodeControlFilter)(nil), "nodeservcontrolapi.NodeControlFilter")
	proto.RegisterType((*NodeControlInfo)(nil), "nodeservcontrolapi.NodeControlInfo")
	proto.RegisterType((*NodeControlInfos)(nil), "nodeservcontrolapi.NodeControlInfos")
	proto.RegisterType((*Order)(nil), "nodeservcontrolapi.Order")
	proto.RegisterType((*SwitchInfo)(nil), "nodeservcontrolapi.SwitchInfo")
	proto.RegisterType((*NodeControlResponse)(nil), "nodeservcontrolapi.NodeControlResponse")
}

func init() { proto.RegisterFile("nodeserv_controlapi.proto", fileDescriptor_d5d931e58fe526e3) }

var fileDescriptor_d5d931e58fe526e3 = []byte{
	// 498 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0xdf, 0x6e, 0xd3, 0x3c,
	0x14, 0x6f, 0xda, 0xaf, 0x5d, 0x73, 0xfa, 0xad, 0xac, 0x87, 0x0b, 0xb2, 0xa2, 0x4d, 0x51, 0x60,
	0x22, 0x42, 0x22, 0x9b, 0xca, 0x15, 0xe2, 0x02, 0xb4, 0x6a, 0x68, 0xb9, 0xd8, 0x26, 0xdc, 0x0a,
	0x24, 0x6e, 0xa2, 0x2c, 0x31, 0x6b, 0xb4, 0x12, 0x47, 0x76, 0x5a, 0xd6, 0x97, 0xe2, 0x29, 0x78,
	0x08, 0x1e, 0x07, 0xd9, 0x89, 0xd3, 0xa8, 0x0c, 0x75, 0x5c, 0xc5, 0xc7, 0xbf, 0x3f, 0xfe, 0x1d,
	0x9f, 0xba, 0xb0, 0x9f, 0xb2, 0x98, 0x0a, 0xca, 0x97, 0x41, 0xc4, 0xd2, 0x9c, 0xb3, 0x79, 0x98,
	0x25, 0x5e, 0xc6, 0x59, 0xce, 0x10, 0x35, 0xb4, 0x46, 0x86, 0x27, 0x37, 0x49, 0x3e, 0x5b, 0x5c,
	0x7b, 0x11, 0xfb, 0x76, 0x2c, 0x56, 0x29, 0xe5, 0xf4, 0x4e, 0x7f, 0x03, 0x49, 0x0f, 0xb3, 0xe4,
	0xb8, 0xfc, 0x16, 0x2e, 0xce, 0x0f, 0x03, 0x06, 0x97, 0x2c, 0xa6, 0xe3, 0xc2, 0xe4, 0x43, 0x32,
	0xcf, 0x29, 0xc7, 0x57, 0xd0, 0x95, 0xb4, 0xe9, 0x2a, 0xa3, 0x96, 0x61, 0x1b, 0x6e, 0x7f, 0x34,
	0xf0, 0xb4, 0xee, 0xb2, 0x04, 0x48, 0x45, 0xc1, 0x03, 0x80, 0x68, 0xbe, 0x10, 0x39, 0xe5, 0x41,
	0x12, 0x5b, 0x4d, 0xdb, 0x70, 0xdb, 0xc4, 0x2c, 0x77, 0xfc, 0x18, 0x9f, 0xc0, 0x4e, 0xc8, 0x69,
	0x28, 0xb1, 0x96, 0x6d, 0xb8, 0x26, 0xe9, 0xc8, 0xd2, 0x8f, 0xd1, 0x82, 0x9d, 0x25, 0xe5, 0x22,
	0x61, 0xa9, 0xf5, 0x9f, 0x02, 0x74, 0x29, 0x91, 0x68, 0x16, 0xa6, 0x29, 0x9d, 0x5b, 0x6d, 0xdb,
	0x70, 0x77, 0x89, 0x2e, 0x9d, 0x25, 0x3c, 0xaa, 0xe5, 0xf5, 0xd3, 0xaf, 0x4c, 0xa7, 0x95, 0x6b,
	0x95, 0xb6, 0xb7, 0x91, 0x56, 0x02, 0xa4, 0xa2, 0xc8, 0x38, 0x72, 0xbd, 0x8e, 0xda, 0x51, 0x50,
	0x8c, 0x4f, 0xc1, 0x94, 0xf7, 0x59, 0x74, 0xd1, 0x52, 0x50, 0xb7, 0xd8, 0xf0, 0x63, 0xe7, 0x02,
	0xf6, 0x36, 0xce, 0x15, 0xf8, 0x06, 0xda, 0x89, 0x5c, 0x58, 0x86, 0xdd, 0x72, 0x7b, 0xa3, 0x67,
	0xde, 0x9f, 0x23, 0xf1, 0x36, 0x44, 0xa4, 0x50, 0x38, 0xbf, 0x0c, 0x68, 0x5f, 0xf1, 0x98, 0x72,
	0x1c, 0x03, 0xe4, 0x21, 0xbf, 0xa1, 0xb9, 0x64, 0x96, 0xf9, 0x1f, 0xe4, 0x54, 0x93, 0xe1, 0x5b,
	0x30, 0x99, 0x74, 0x53, 0x13, 0x6b, 0xaa, 0x89, 0x1d, 0xdc, 0xe7, 0x71, 0xa5, 0x49, 0x64, 0xcd,
	0xc7, 0xf7, 0x00, 0xe2, 0x7b, 0x92, 0x47, 0x33, 0x75, 0x83, 0x2d, 0x95, 0xe0, 0xf0, 0x3e, 0xf5,
	0xa4, 0x62, 0x9d, 0x37, 0x48, 0x4d, 0x73, 0xda, 0x2b, 0x8f, 0x97, 0x85, 0x73, 0x01, 0xb0, 0x26,
	0xe2, 0x3b, 0xe8, 0x8a, 0xbb, 0x89, 0xba, 0xc5, 0x7f, 0x69, 0xae, 0x12, 0x39, 0x47, 0xf0, 0xb8,
	0x06, 0x12, 0x2a, 0x32, 0x96, 0x0a, 0x8a, 0x7d, 0x68, 0xb2, 0x5b, 0xe5, 0xd8, 0x25, 0x4d, 0x76,
	0xfb, 0xf2, 0x10, 0xcc, 0xaa, 0x39, 0x1c, 0xc0, 0xee, 0xe4, 0xb3, 0x3f, 0x1d, 0x9f, 0x07, 0x93,
	0x33, 0xf2, 0xe9, 0x8c, 0xec, 0x35, 0x46, 0x3f, 0x0d, 0xe8, 0xd5, 0x7c, 0x30, 0x80, 0xfe, 0xc7,
	0x05, 0xe5, 0x2b, 0xfd, 0x03, 0x11, 0x78, 0xb4, 0x25, 0x57, 0xf1, 0x36, 0x86, 0xcf, 0x1f, 0x10,
	0x5f, 0x38, 0x0d, 0x9c, 0xc2, 0xff, 0xe5, 0x8e, 0x04, 0x05, 0xee, 0xff, 0x75, 0x1e, 0xc3, 0x17,
	0x5b, 0x2c, 0x75, 0xd3, 0x4e, 0xe3, 0xf4, 0xe4, 0x8b, 0xb7, 0xe5, 0x8d, 0x6f, 0xfc, 0x5b, 0x5c,
	0x77, 0xd4, 0x43, 0x7f, 0xfd, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x94, 0xac, 0xa4, 0x7f, 0x4b, 0x04,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NodeControlClient is the client API for NodeControl service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NodeControlClient interface {
	QueryNodeInfos(ctx context.Context, in *NodeControlFilter, opts ...grpc.CallOption) (*NodeControlInfos, error)
	ControlNodes(ctx context.Context, in *Order, opts ...grpc.CallOption) (*NodeControlResponse, error)
}

type nodeControlClient struct {
	cc *grpc.ClientConn
}

func NewNodeControlClient(cc *grpc.ClientConn) NodeControlClient {
	return &nodeControlClient{cc}
}

func (c *nodeControlClient) QueryNodeInfos(ctx context.Context, in *NodeControlFilter, opts ...grpc.CallOption) (*NodeControlInfos, error) {
	out := new(NodeControlInfos)
	err := c.cc.Invoke(ctx, "/nodeservcontrolapi.NodeControl/QueryNodeInfos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeControlClient) ControlNodes(ctx context.Context, in *Order, opts ...grpc.CallOption) (*NodeControlResponse, error) {
	out := new(NodeControlResponse)
	err := c.cc.Invoke(ctx, "/nodeservcontrolapi.NodeControl/ControlNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NodeControlServer is the server API for NodeControl service.
type NodeControlServer interface {
	QueryNodeInfos(context.Context, *NodeControlFilter) (*NodeControlInfos, error)
	ControlNodes(context.Context, *Order) (*NodeControlResponse, error)
}

// UnimplementedNodeControlServer can be embedded to have forward compatible implementations.
type UnimplementedNodeControlServer struct {
}

func (*UnimplementedNodeControlServer) QueryNodeInfos(ctx context.Context, req *NodeControlFilter) (*NodeControlInfos, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryNodeInfos not implemented")
}
func (*UnimplementedNodeControlServer) ControlNodes(ctx context.Context, req *Order) (*NodeControlResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ControlNodes not implemented")
}

func RegisterNodeControlServer(s *grpc.Server, srv NodeControlServer) {
	s.RegisterService(&_NodeControl_serviceDesc, srv)
}

func _NodeControl_QueryNodeInfos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeControlFilter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeControlServer).QueryNodeInfos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nodeservcontrolapi.NodeControl/QueryNodeInfos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeControlServer).QueryNodeInfos(ctx, req.(*NodeControlFilter))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeControl_ControlNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Order)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeControlServer).ControlNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nodeservcontrolapi.NodeControl/ControlNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeControlServer).ControlNodes(ctx, req.(*Order))
	}
	return interceptor(ctx, in, info, handler)
}

var _NodeControl_serviceDesc = grpc.ServiceDesc{
	ServiceName: "nodeservcontrolapi.NodeControl",
	HandlerType: (*NodeControlServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "QueryNodeInfos",
			Handler:    _NodeControl_QueryNodeInfos_Handler,
		},
		{
			MethodName: "ControlNodes",
			Handler:    _NodeControl_ControlNodes_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "nodeserv_controlapi.proto",
}
