// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: nodeserv_controlapi.proto

package synerex_nodeserv_controlapi

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	synerex_nodeapi "github.com/synerex/synerex_nodeapi"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type OrderType int32

const (
	OrderType_SWITCH_SERVER OrderType = 0
)

// Enum value maps for OrderType.
var (
	OrderType_name = map[int32]string{
		0: "SWITCH_SERVER",
	}
	OrderType_value = map[string]int32{
		"SWITCH_SERVER": 0,
	}
)

func (x OrderType) Enum() *OrderType {
	p := new(OrderType)
	*p = x
	return p
}

func (x OrderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderType) Descriptor() protoreflect.EnumDescriptor {
	return file_nodeserv_controlapi_proto_enumTypes[0].Descriptor()
}

func (OrderType) Type() protoreflect.EnumType {
	return &file_nodeserv_controlapi_proto_enumTypes[0]
}

func (x OrderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderType.Descriptor instead.
func (OrderType) EnumDescriptor() ([]byte, []int) {
	return file_nodeserv_controlapi_proto_rawDescGZIP(), []int{0}
}

type NodeControlFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeType  synerex_nodeapi.NodeType `protobuf:"varint,1,opt,name=nodeType,proto3,enum=nodeapi.NodeType" json:"nodeType,omitempty"` // default: all
	ClusterId int32                    `protobuf:"varint,2,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	AreaId    string                   `protobuf:"bytes,3,opt,name=area_id,json=areaId,proto3" json:"area_id,omitempty"`
	Version   string                   `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	Channel   uint32                   `protobuf:"varint,5,opt,name=channel,proto3" json:"channel,omitempty"`
}

func (x *NodeControlFilter) Reset() {
	*x = NodeControlFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodeserv_controlapi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeControlFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeControlFilter) ProtoMessage() {}

func (x *NodeControlFilter) ProtoReflect() protoreflect.Message {
	mi := &file_nodeserv_controlapi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeControlFilter.ProtoReflect.Descriptor instead.
func (*NodeControlFilter) Descriptor() ([]byte, []int) {
	return file_nodeserv_controlapi_proto_rawDescGZIP(), []int{0}
}

func (x *NodeControlFilter) GetNodeType() synerex_nodeapi.NodeType {
	if x != nil {
		return x.NodeType
	}
	return synerex_nodeapi.NodeType_PROVIDER
}

func (x *NodeControlFilter) GetClusterId() int32 {
	if x != nil {
		return x.ClusterId
	}
	return 0
}

func (x *NodeControlFilter) GetAreaId() string {
	if x != nil {
		return x.AreaId
	}
	return ""
}

func (x *NodeControlFilter) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *NodeControlFilter) GetChannel() uint32 {
	if x != nil {
		return x.Channel
	}
	return 0
}

type NodeControlInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeInfo *synerex_nodeapi.NodeInfo `protobuf:"bytes,1,opt,name=nodeInfo,proto3" json:"nodeInfo,omitempty"`
	NodeId   int32                     `protobuf:"varint,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	ServerId int32                     `protobuf:"varint,3,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
}

func (x *NodeControlInfo) Reset() {
	*x = NodeControlInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodeserv_controlapi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeControlInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeControlInfo) ProtoMessage() {}

func (x *NodeControlInfo) ProtoReflect() protoreflect.Message {
	mi := &file_nodeserv_controlapi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeControlInfo.ProtoReflect.Descriptor instead.
func (*NodeControlInfo) Descriptor() ([]byte, []int) {
	return file_nodeserv_controlapi_proto_rawDescGZIP(), []int{1}
}

func (x *NodeControlInfo) GetNodeInfo() *synerex_nodeapi.NodeInfo {
	if x != nil {
		return x.NodeInfo
	}
	return nil
}

func (x *NodeControlInfo) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *NodeControlInfo) GetServerId() int32 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

type NodeControlInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*NodeControlInfo `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos,omitempty"`
}

func (x *NodeControlInfos) Reset() {
	*x = NodeControlInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodeserv_controlapi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeControlInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeControlInfos) ProtoMessage() {}

func (x *NodeControlInfos) ProtoReflect() protoreflect.Message {
	mi := &file_nodeserv_controlapi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeControlInfos.ProtoReflect.Descriptor instead.
func (*NodeControlInfos) Descriptor() ([]byte, []int) {
	return file_nodeserv_controlapi_proto_rawDescGZIP(), []int{2}
}

func (x *NodeControlInfos) GetInfos() []*NodeControlInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetNode *NodeControlInfo `protobuf:"bytes,1,opt,name=targetNode,proto3" json:"targetNode,omitempty"`
	OrderType  OrderType        `protobuf:"varint,2,opt,name=orderType,proto3,enum=nodeservcontrolapi.OrderType" json:"orderType,omitempty"`
	// Types that are assignable to OrderInfo:
	//	*Order_SwitchInfo
	OrderInfo isOrder_OrderInfo `protobuf_oneof:"orderInfo"`
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodeserv_controlapi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_nodeserv_controlapi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_nodeserv_controlapi_proto_rawDescGZIP(), []int{3}
}

func (x *Order) GetTargetNode() *NodeControlInfo {
	if x != nil {
		return x.TargetNode
	}
	return nil
}

func (x *Order) GetOrderType() OrderType {
	if x != nil {
		return x.OrderType
	}
	return OrderType_SWITCH_SERVER
}

func (m *Order) GetOrderInfo() isOrder_OrderInfo {
	if m != nil {
		return m.OrderInfo
	}
	return nil
}

func (x *Order) GetSwitchInfo() *SwitchInfo {
	if x, ok := x.GetOrderInfo().(*Order_SwitchInfo); ok {
		return x.SwitchInfo
	}
	return nil
}

type isOrder_OrderInfo interface {
	isOrder_OrderInfo()
}

type Order_SwitchInfo struct {
	SwitchInfo *SwitchInfo `protobuf:"bytes,3,opt,name=switchInfo,proto3,oneof"`
}

func (*Order_SwitchInfo) isOrder_OrderInfo() {}

type SwitchInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SxServer *NodeControlInfo `protobuf:"bytes,1,opt,name=sxServer,proto3" json:"sxServer,omitempty"`
}

func (x *SwitchInfo) Reset() {
	*x = SwitchInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodeserv_controlapi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchInfo) ProtoMessage() {}

func (x *SwitchInfo) ProtoReflect() protoreflect.Message {
	mi := &file_nodeserv_controlapi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchInfo.ProtoReflect.Descriptor instead.
func (*SwitchInfo) Descriptor() ([]byte, []int) {
	return file_nodeserv_controlapi_proto_rawDescGZIP(), []int{4}
}

func (x *SwitchInfo) GetSxServer() *NodeControlInfo {
	if x != nil {
		return x.SxServer
	}
	return nil
}

type NodeControlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *NodeControlResponse) Reset() {
	*x = NodeControlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodeserv_controlapi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeControlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeControlResponse) ProtoMessage() {}

func (x *NodeControlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nodeserv_controlapi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeControlResponse.ProtoReflect.Descriptor instead.
func (*NodeControlResponse) Descriptor() ([]byte, []int) {
	return file_nodeserv_controlapi_proto_rawDescGZIP(), []int{5}
}

func (x *NodeControlResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

var File_nodeserv_controlapi_proto protoreflect.FileDescriptor

var file_nodeserv_controlapi_proto_rawDesc = []byte{
	0x0a, 0x19, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x65, 0x72, 0x76, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x6e, 0x6f, 0x64,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x61, 0x70, 0x69, 0x1a,
	0x0d, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xae,
	0x01, 0x0a, 0x11, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69,
	0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22,
	0x76, 0x0a, 0x0f, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x2d, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x10, 0x4e, 0x6f, 0x64, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x39, 0x0a, 0x05, 0x69,
	0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6e, 0x6f, 0x64,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x61, 0x70, 0x69, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0xd8, 0x01, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x43, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x65, 0x72, 0x76, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x3b, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x40, 0x0a, 0x0a, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0b, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x4d, 0x0a, 0x0a, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x3f, 0x0a, 0x08, 0x73, 0x78, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x65, 0x72, 0x76, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x73, 0x78, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x22, 0x25, 0x0a, 0x13, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x2a, 0x1e, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x53,
	0x45, 0x52, 0x56, 0x45, 0x52, 0x10, 0x00, 0x32, 0xc4, 0x01, 0x0a, 0x0b, 0x4e, 0x6f, 0x64, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x5f, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x25, 0x2e, 0x6e, 0x6f, 0x64, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x61, 0x70, 0x69, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x1a, 0x24, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x65, 0x72, 0x76, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x19, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x1a, 0x27, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x65, 0x72, 0x76, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x30,
	0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x79, 0x6e,
	0x65, 0x72, 0x65, 0x78, 0x2f, 0x73, 0x79, 0x6e, 0x65, 0x72, 0x65, 0x78, 0x5f, 0x6e, 0x6f, 0x64,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x61, 0x70, 0x69,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_nodeserv_controlapi_proto_rawDescOnce sync.Once
	file_nodeserv_controlapi_proto_rawDescData = file_nodeserv_controlapi_proto_rawDesc
)

func file_nodeserv_controlapi_proto_rawDescGZIP() []byte {
	file_nodeserv_controlapi_proto_rawDescOnce.Do(func() {
		file_nodeserv_controlapi_proto_rawDescData = protoimpl.X.CompressGZIP(file_nodeserv_controlapi_proto_rawDescData)
	})
	return file_nodeserv_controlapi_proto_rawDescData
}

var file_nodeserv_controlapi_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_nodeserv_controlapi_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_nodeserv_controlapi_proto_goTypes = []interface{}{
	(OrderType)(0),                   // 0: nodeservcontrolapi.OrderType
	(*NodeControlFilter)(nil),        // 1: nodeservcontrolapi.NodeControlFilter
	(*NodeControlInfo)(nil),          // 2: nodeservcontrolapi.NodeControlInfo
	(*NodeControlInfos)(nil),         // 3: nodeservcontrolapi.NodeControlInfos
	(*Order)(nil),                    // 4: nodeservcontrolapi.Order
	(*SwitchInfo)(nil),               // 5: nodeservcontrolapi.SwitchInfo
	(*NodeControlResponse)(nil),      // 6: nodeservcontrolapi.NodeControlResponse
	(synerex_nodeapi.NodeType)(0),    // 7: nodeapi.NodeType
	(*synerex_nodeapi.NodeInfo)(nil), // 8: nodeapi.NodeInfo
}
var file_nodeserv_controlapi_proto_depIdxs = []int32{
	7, // 0: nodeservcontrolapi.NodeControlFilter.nodeType:type_name -> nodeapi.NodeType
	8, // 1: nodeservcontrolapi.NodeControlInfo.nodeInfo:type_name -> nodeapi.NodeInfo
	2, // 2: nodeservcontrolapi.NodeControlInfos.infos:type_name -> nodeservcontrolapi.NodeControlInfo
	2, // 3: nodeservcontrolapi.Order.targetNode:type_name -> nodeservcontrolapi.NodeControlInfo
	0, // 4: nodeservcontrolapi.Order.orderType:type_name -> nodeservcontrolapi.OrderType
	5, // 5: nodeservcontrolapi.Order.switchInfo:type_name -> nodeservcontrolapi.SwitchInfo
	2, // 6: nodeservcontrolapi.SwitchInfo.sxServer:type_name -> nodeservcontrolapi.NodeControlInfo
	1, // 7: nodeservcontrolapi.NodeControl.QueryNodeInfos:input_type -> nodeservcontrolapi.NodeControlFilter
	4, // 8: nodeservcontrolapi.NodeControl.ControlNodes:input_type -> nodeservcontrolapi.Order
	3, // 9: nodeservcontrolapi.NodeControl.QueryNodeInfos:output_type -> nodeservcontrolapi.NodeControlInfos
	6, // 10: nodeservcontrolapi.NodeControl.ControlNodes:output_type -> nodeservcontrolapi.NodeControlResponse
	9, // [9:11] is the sub-list for method output_type
	7, // [7:9] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_nodeserv_controlapi_proto_init() }
func file_nodeserv_controlapi_proto_init() {
	if File_nodeserv_controlapi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_nodeserv_controlapi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeControlFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodeserv_controlapi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeControlInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodeserv_controlapi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeControlInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodeserv_controlapi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodeserv_controlapi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodeserv_controlapi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeControlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_nodeserv_controlapi_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Order_SwitchInfo)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nodeserv_controlapi_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nodeserv_controlapi_proto_goTypes,
		DependencyIndexes: file_nodeserv_controlapi_proto_depIdxs,
		EnumInfos:         file_nodeserv_controlapi_proto_enumTypes,
		MessageInfos:      file_nodeserv_controlapi_proto_msgTypes,
	}.Build()
	File_nodeserv_controlapi_proto = out.File
	file_nodeserv_controlapi_proto_rawDesc = nil
	file_nodeserv_controlapi_proto_goTypes = nil
	file_nodeserv_controlapi_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// NodeControlClient is the client API for NodeControl service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NodeControlClient interface {
	QueryNodeInfos(ctx context.Context, in *NodeControlFilter, opts ...grpc.CallOption) (*NodeControlInfos, error)
	ControlNodes(ctx context.Context, in *Order, opts ...grpc.CallOption) (*NodeControlResponse, error)
}

type nodeControlClient struct {
	cc grpc.ClientConnInterface
}

func NewNodeControlClient(cc grpc.ClientConnInterface) NodeControlClient {
	return &nodeControlClient{cc}
}

func (c *nodeControlClient) QueryNodeInfos(ctx context.Context, in *NodeControlFilter, opts ...grpc.CallOption) (*NodeControlInfos, error) {
	out := new(NodeControlInfos)
	err := c.cc.Invoke(ctx, "/nodeservcontrolapi.NodeControl/QueryNodeInfos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeControlClient) ControlNodes(ctx context.Context, in *Order, opts ...grpc.CallOption) (*NodeControlResponse, error) {
	out := new(NodeControlResponse)
	err := c.cc.Invoke(ctx, "/nodeservcontrolapi.NodeControl/ControlNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NodeControlServer is the server API for NodeControl service.
type NodeControlServer interface {
	QueryNodeInfos(context.Context, *NodeControlFilter) (*NodeControlInfos, error)
	ControlNodes(context.Context, *Order) (*NodeControlResponse, error)
}

// UnimplementedNodeControlServer can be embedded to have forward compatible implementations.
type UnimplementedNodeControlServer struct {
}

func (*UnimplementedNodeControlServer) QueryNodeInfos(context.Context, *NodeControlFilter) (*NodeControlInfos, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryNodeInfos not implemented")
}
func (*UnimplementedNodeControlServer) ControlNodes(context.Context, *Order) (*NodeControlResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ControlNodes not implemented")
}

func RegisterNodeControlServer(s *grpc.Server, srv NodeControlServer) {
	s.RegisterService(&_NodeControl_serviceDesc, srv)
}

func _NodeControl_QueryNodeInfos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeControlFilter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeControlServer).QueryNodeInfos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nodeservcontrolapi.NodeControl/QueryNodeInfos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeControlServer).QueryNodeInfos(ctx, req.(*NodeControlFilter))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeControl_ControlNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Order)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeControlServer).ControlNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nodeservcontrolapi.NodeControl/ControlNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeControlServer).ControlNodes(ctx, req.(*Order))
	}
	return interceptor(ctx, in, info, handler)
}

var _NodeControl_serviceDesc = grpc.ServiceDesc{
	ServiceName: "nodeservcontrolapi.NodeControl",
	HandlerType: (*NodeControlServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "QueryNodeInfos",
			Handler:    _NodeControl_QueryNodeInfos_Handler,
		},
		{
			MethodName: "ControlNodes",
			Handler:    _NodeControl_ControlNodes_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "nodeserv_controlapi.proto",
}
