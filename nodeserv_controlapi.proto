syntax = "proto3";

package nodeservcontrolapi;

import "github.com/synerex/synerex_nodeapi/nodeapi.proto";

option go_package="github.com/synerex/synerex_nodeserv_controlapi";

service NodeControl {
    rpc QueryNodeInfos(NodeControlFilter) returns (NodeControlInfos){}
    rpc ControlNodes(Order) returns (NodeControlResponse){}
}

message NodeControlFilter {
    nodeapi.NodeType nodeType = 1; // default: all
    int32 cluster_id = 2;
    string area_id = 3;
    string version = 4;
    uint32 channel = 5;
}

message NodeControlInfo{
    nodeapi.NodeInfo nodeInfo = 1;
    int32 node_id = 2;
    int32 server_id = 3;
}

message NodeControlInfos {
    repeated NodeControlInfo infos = 1;
}

message Order {
    NodeControlInfo targetNode = 1;
    OrderType orderType = 2;
    oneof orderInfo {
        SwitchInfo switchInfo = 3;
    }
}

enum OrderType {
    SWITCH_SERVER = 0;
}

message SwitchInfo {
    NodeControlInfo sxServer = 1;
}

message NodeControlResponse {
    bool ok = 1;
}
